@startuml

title CreateUserDetail Repository
autonumber
hide footbox

participant SignupService
participant SignupRepository #LightSeaGreen



 SignupService-> SignupRepository : CreateUserDetail(UserDetailBO userbo)

  SignupRepository->  SignupRepository : Create new instance -> DataTable as dsRecords

    SignupRepository-> SignupRepository: Create instance as "userdetailbo" for "UsersDetailBO"

    SignupRepository -> SignupRepository : Create new instance -> SqlCommand as cmd by passing ("CreateUserDetail",DBConnectionString)

    SignupRepository -> SignupRepository : Assign cmd.command as CommandType.StoredProcedure

   
    alt (DBConnectionString.State == ConnectionState.Closed)
        SignupRepository -> SignupRepository : DBConnectionString.Open()
    end

   SignupRepository -> SignupRepository : Assign userbo values in parameter
   SignupRepository -> SignupRepository : Excute.ExecuteNonQuery()


  SignupRepository-> SignupRepository: Get all the values in UserDetail table
    
    SignupRepository -> SignupRepository : DBConnectionString.Close()

alt (Response - Data found)
    SignupRepository-> SignupRepository:  Assign data to userdetailbo object
    
    end


   SignupRepository -> SignupService: Returns userdetailbo


== PSEUDO CODE ==

hnote across

TRY

    ASSIGN DataTable dsRecords = new DataTable()
    Assign UserDetaiBO userbo = new UserDetaiBO()

    ASSIGN SqlCommand cmd = new SqlCommand("GetUserData",DBConnectionString)
    
    ASSIGN cmd.command = CommandType.StoredProcedure
    
    IF DBConnectionString.State == ConnectionState.Closed
        DBConnectionString.Open()

   Assign Parameter(userbo)
   
   Assign ExecuteNonQuery()


    ASSIGN Values from dsRecords to userdetailbo
    
    DBConnectionString.Close()

    **RETURN userbo**

CATCH

    **RETURN ServiceResult { status = ServerError, data = null }**
    
end note

@enduml